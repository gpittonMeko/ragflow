# HTTP → HTTPS
server {
    listen 80;
    server_name sgailegal.com sgailegal.it www.sgailegal.com www.sgailegal.it;
    return 301 https://$host$request_uri;
}

# HTTPS
server {
    listen 443 ssl;
    server_name sgailegal.com sgailegal.it www.sgailegal.com www.sgailegal.it;

    # Certificati
    ssl_certificate     /etc/letsencrypt/live/sgailegal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sgailegal.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # SPA React
    root /ragflow/web/dist;
    index index.html;

    # Static cache
    location ~ ^/(assets|static|media)/ {
        access_log off;
        expires 7d;
        try_files $uri =404;
    }

    # --- OAUTH (Flask su 127.0.0.1:8000) ---
    # Strip /oauth/ → passa alla root del Flask
    location ^~ /oauth/ {
        include /etc/nginx/proxy.conf;
        proxy_redirect off;

        # SSE/streaming robusti
        proxy_buffering off;
        proxy_read_timeout 3600s;
        add_header X-Accel-Buffering no;

        proxy_pass http://127.0.0.1:8000/;
    }

    # --- RAGFLOW API ---
    # ATTENZIONE: qui devi puntare a dove ascolta davvero Ragflow.
    # Se il container espone la porta sull'host: usa 127.0.0.1:9380/
    # (altrimenti pubblica la porta nel docker-compose).
    location ^~ /api/ {
        include /etc/nginx/proxy.conf;
        proxy_pass http://127.0.0.1:9380/;
    }
    location ^~ /v1/ {
        include /etc/nginx/proxy.conf;
        proxy_pass http://127.0.0.1:9380/;
    }

    # --- Pagina iframe /chat/share: header per postMessage ---
    location ^~ /chat/share {
        add_header Cross-Origin-Opener-Policy  "unsafe-none" always;
        add_header Cross-Origin-Embedder-Policy "unsafe-none" always;
        try_files $uri $uri/ /index.html;
    }

    # Fallback SPA
    location / {
        try_files $uri $uri/ /index.html;
    }
}
