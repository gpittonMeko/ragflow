include:
  - ./docker-compose-base.yml
services:
  ragflow:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: ../              # cartella radice progetto (dove c’è setup.py)
      dockerfile: Dockerfile    # se il nome è “Dockerfile” puoi ometterlo
    image: ragflow-patched:latest   # (facoltativo) tag locale
    # example to setup MCP server
    # command:
    #   - --enable-mcpserver
    #   - --mcp-host=0.0.0.0F
    #   - --mcp-port=9382
    #   - --mcp-base-url=http://127.0.0.1:9380
    #   - --mcp-script-path=/ragflow/mcp/server/server.py
    #   - --mcp-mode=self-host
    #   - --mcp--host-api-key="ragflow-xxxxxxx"
    container_name: ragflow-server
    ports:
      - ${SVR_HTTP_PORT}:9380
      - 80:80
      - 443:443
      - 5678:5678
      - 5679:5679
      - 9382:9382 # entry for MCP (host_port:docker_port). The docker_port should match with the value you set for `mcp-port` above
    volumes:
      - ./ragflow-logs:/ragflow/logs
      - ./docker/nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../history_data_agent:/ragflow/history_data_agent
      - ./service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template

      - ../web:/ragflow/web
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./entrypoint.sh:/ragflow/entrypoint.sh  # Aggiungi questa riga

    env_file: .env
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
    networks:
      - ragflow
    restart: on-failure
    # https://docs.docker.com/engine/daemon/prometheus/#create-a-prometheus-configuration
    # If you're using Docker Desktop, the --add-host flag is optional. This flag makes sure that the host's internal IP gets exposed to the Prometheus container.
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  executor:
    depends_on:
      mysql:
        condition: service_healthy
      ragflow:              # <-- AGGIUNGI QUESTE 2 RIGHE
        condition: service_started   # oppure service_healthy se aggiungi un healthcheck
    image: ${RAGFLOW_IMAGE}
    command: ["--workers=5"]


    container_name: ragflow-executor
    volumes:
      - ./ragflow-logs:/ragflow/logs


    env_file: .env
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
    networks:
      - ragflow
    restart: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"