services:

  # --- ELASTICSEARCH (single node DEV, RAM bassa)
  es01:
    container_name: ragflow-es-01
    image: elasticsearch:${STACK_VERSION}
    env_file: .env
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - "${ES_PORT:-9200}:9200"
    environment:
      - node.name=es01
      - cluster.name=ragflow-cluster
      - network.host=0.0.0.0
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - TZ=${TIMEZONE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    healthcheck:
      test:
        - "CMD-SHELL"
        - >
          curl -fsSL localhost:9200/_cluster/health?pretty |
          grep '"status"\s*:\s*"green"'
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - ragflow
    restart: on-failure


  # --- INFINITY (profilo infinity, dev)
  infinity:
    container_name: ragflow-infinity
    profiles:
      - infinity
    image: infiniflow/infinity:v0.6.0-dev3
    volumes:
      - infinity_data:/var/infinity
      - ./infinity_conf.toml:/infinity_conf.toml
    command: ["-f", "/infinity_conf.toml"]
    ports:
      - ${INFINITY_THRIFT_PORT:-23817}:23817
      - ${INFINITY_HTTP_PORT:-23820}:23820
      - 15432:5432   # host:container, 15432 libera conflitti
    env_file: .env
    environment:
      - TZ=${TIMEZONE}
    mem_limit: ${MEM_LIMIT:-2g}
    ulimits:
      nofile:
        soft: 500000
        hard: 500000
    networks:
      - ragflow
    healthcheck:
      test: ["CMD", "curl", "http://localhost:23820/admin/node/current"]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: on-failure


  # --- MYSQL
  mysql:
    image: mysql:8.0.39
    container_name: ragflow-mysql
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TIMEZONE}
    command:
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --tls_version="TLSv1.2,TLSv1.3"
      --init-file /data/application/init.sql
      --binlog_expire_logs_seconds=604800
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/data/application/init.sql
    networks:
      - ragflow
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure


  # --- MINIO
  minio:
    image: quay.io/minio/minio:RELEASE.2023-12-20T01-00-02Z
    container_name: ragflow-minio
    command: server --console-address ":9001" /data
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    env_file: .env
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - minio_data:/data
    networks:
      - ragflow
    restart: on-failure


  # --- REDIS/VALKEY
  redis:
    image: valkey/valkey:8
    container_name: ragflow-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru
    env_file: .env
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis_data:/data
    networks:
      - ragflow
    restart: on-failure


  # --- OAUTH BACKEND (ES.)
  backendoauth:
    container_name: ragflow-backend-oauth
    build:
      context: ../web/src/pages/login-page
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - TZ=${TIMEZONE}
    networks:
      - ragflow
    restart: on-failure  


  # -------------------------------------------------
  # RAGFLOW APP WEB PRINCIPALE (server/applicativo)
  # -------------------------------------------------
  ragflow-server:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: ../              # cartella radice progetto
      dockerfile: Dockerfile    # metti quello giusto se si chiama diversamente
    image: ragflow-patched:latest
    container_name: ragflow-server
    ports:
      - ${SVR_HTTP_PORT:-9380}:9380
      - "80:80"
      - "443:443"
      - "5678:5678"
      - "5679:5679"
      - "9382:9382"
    volumes:
      - ./ragflow-logs:/ragflow/logs
      - ../web:/ragflow/web
      # ---- NGINX: togli queste 3 se non vuoi nginx in DEV!
      - ./nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # ---- FINE NGINX
      - ../history_data_agent:/ragflow/history_data_agent
      - ./service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./entrypoint.sh:/ragflow/entrypoint.sh
    env_file: .env
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
    networks:
      - ragflow
    restart: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"


  # ---------------------------
  # RAGFLOW EXECUTOR (background worker)
  # ---------------------------
  ragflow-executor:
    depends_on:
      mysql:
        condition: service_healthy
      ragflow-server:
        condition: service_started
    image: ${RAGFLOW_IMAGE}
    command: ["--workers=5"]
    container_name: ragflow-executor
    volumes:
      - ./ragflow-logs:/ragflow/logs
    env_file: .env
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
    networks:
      - ragflow
    restart: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  infinity_data:
    driver: local
  mysql_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  ragflow-logs:
    driver: local

networks:
  ragflow:
    driver: bridge